# SPDX-FileCopyrightText: 2021 arnavyc
#
# SPDX-License-Identifier: 0BSD

name: Build and test

on: [push]

jobs:
  build:
    name: ${{ matrix.config.name }}
    runs-on: ${{ matrix.config.runner }}
    strategy:
      fail-fast: false
      matrix:
        config:
          #- name: 'Windows Latest - MSVC'
          #  runner: windows-latest
          #  build-type: Release
          #  cc: cl
          #  cxx: cl

          #- name: 'Windows Latest - Clang'
          #  runner: windows-latest
          #  build-type: Release
          #  cc: clang
          #  cxx: clang++

          - name: 'Ubuntu 20.04 - GCC'
            runner: ubuntu-20.04
            build-type: Release
            cc: gcc
            cxx: g++

          - name: 'Ubuntu 20.04 - Clang'
            runner: ubuntu-20.04
            build-type: Release
            cc: clang
            cxx: clang++

    steps:
      - name: Checkout project
        uses: actions/checkout@v2

      - name: Install CMake and Ninja
        uses: lukka/get-cmake@v3.20.1

      - name: Setup MSVC environment if Windows
        uses: ilammy/msvc-dev-cmd@v1

      - name: Add clang path to $PATH env
        shell: pwsh
        if: runner.os == 'Windows' && matrix.config.cc == 'clang'
        run: |
          echo "C:\msys64\mingw64\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append

      - name: "Clone `marehr/intel-sde-downloader`"
        uses: actions/checkout@v2
        with:
          repository: marehr/intel-sde-downloader
          path: ./intel-sde-downloader

      - name: Download Intel SDE
        run: |
          pip install -r intel-sde-downloader/requirements.txt
          python ./intel-sde-downloader/intel-sde-downloader.py sde-external-8.69.1-2021-07-18-lin.tar.bz2
          tar -C intel-sde-downloader -xvf sde-external-8.69.1-2021-07-18-lin.tar.bz2
          mv intel-sde-downloader/sde-external-8.69.1-2021-07-18-lin intel-sde-downloader/sde

      - name: Setup yama for Intel SDE to run
        if: runner.os == 'Linux'
        run: "sudo sh -c 'echo 0 > /proc/sys/kernel/yama/ptrace_scope'"

      - name: Configure CMake project
        shell: pwsh
        run: |
          cmake `
          -D CMAKE_BUILD_TYPE=${{ matrix.config.build-type }} `
          -D INTEL_SDE_PATH="$(pwd)/intel-sde-downloader/sde/sde$(('', '64')[[Environment]::Is64BitOperatingSystem]);--" `
          -G Ninja `
          -B build/
        env:
          CC: ${{ matrix.config.cc }}
          CXX: ${{ matrix.config.cxx }}

      - name: Build the project
        run: cmake --build build/

      - name: Test the project
        run: ctest -V --test-dir build/ --output-on-failure
